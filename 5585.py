# 그리디 알고리즘
# 거스름돈

# 지폐를 1장 1000엔짜리 이미 지불한 상태
# 입력에 지불해야할 돈을 입력(가령 500엔짜리를 구매하고 1000엔을 낸다면 거스름돈은 500이 되는 것)
# 출력에 잔돈의 매수를 입력(500엔짜리를 구매하고 1000엔을 낸다면 거스름돈은 500이 되고 매수는 1개임)

n = int(input())

price = 1000-n

don = [500, 100, 50, 10, 5, 1]

cnt = 0

for i in don:
    cnt = cnt + (price // i)
    price = price % i

print(cnt)

# 문제 해석
# 거스름돈 문제에서 어떤 돈을 나누는지는 문제에서 주어지기 떄문에 이를 리스트로 만든다
# 문제에서 거스름돈 몇 개를 돌려줄지 물어봤으므로 해당 거스름돈으로 몇 번 나눴을 때 몫을 파악한다
# 그리고 난 다음 나머지를 보고 이를 다시 더 작은 거스름돈 단위로 나누고를 반복한다
# 즉 가격이 380이라면 1000원을 냈을 때 거스름 받아야 할 돈은 720임
# 이를 먼저 500으로 나눴을 때 몫을 구한다 --> 1임,
# 만약 500보다 작은 수라면 몫은 0이 되고 나머지로 다시 계산하게 되는 것
# 그래서 몫이 존재한다면 그 수만큼 카운트에 더하는 것
# 마찬가지로 몫이 없다면 몫의 값이 0이라는 말이므로 0을 더하게 되서 논리적으로 오류가 없게 된다
# 반복문을 돌려서 나온 카운트를 출력하면 된다.